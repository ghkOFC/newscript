-- Variáveis principais
local player = game.Players.LocalPlayer
local character = player.Character or player.CharacterAdded:Wait()
local humanoid = character:WaitForChild("Humanoid")
local UserInputService = game:GetService("UserInputService")
local RunService = game:GetService("RunService")
local teleportButtonClicked = false

-- Funções do Fly
local flying = false
local speed = 50
local bodyVelocity = nil
local bodyGyro = nil

-- Função de Fly
local function toggleFly()
    flying = not flying
    if flying then
        bodyVelocity = Instance.new("BodyVelocity")
        bodyVelocity.MaxForce = Vector3.new(400000, 400000, 400000)
        bodyVelocity.Velocity = Vector3.new(0, 0, 0)
        bodyVelocity.Parent = character.HumanoidRootPart

        bodyGyro = Instance.new("BodyGyro")
        bodyGyro.MaxTorque = Vector3.new(400000, 400000, 400000)
        bodyGyro.CFrame = character.HumanoidRootPart.CFrame
        bodyGyro.Parent = character.HumanoidRootPart
    else
        if bodyVelocity then
            bodyVelocity:Destroy()
            bodyVelocity = nil
        end
        if bodyGyro then
            bodyGyro:Destroy()
            bodyGyro = nil
        end
    end
end

-- Função de controle de movimento do Fly
local function moveFly()
    if flying then
        local direction = Vector3.new(0, 0, 0)

        if UserInputService:IsKeyDown(Enum.KeyCode.W) then
            direction = direction + character.HumanoidRootPart.CFrame.LookVector
        end
        if UserInputService:IsKeyDown(Enum.KeyCode.S) then
            direction = direction - character.HumanoidRootPart.CFrame.LookVector
        end
        if UserInputService:IsKeyDown(Enum.KeyCode.A) then
            direction = direction - character.HumanoidRootPart.CFrame.RightVector
        end
        if UserInputService:IsKeyDown(Enum.KeyCode.D) then
            direction = direction + character.HumanoidRootPart.CFrame.RightVector
        end
        if UserInputService:IsKeyDown(Enum.KeyCode.Space) then
            direction = direction + Vector3.new(0, 1, 0)
        end
        if UserInputService:IsKeyDown(Enum.KeyCode.LeftControl) then
            direction = direction - Vector3.new(0, 1, 0)
        end

        bodyVelocity.Velocity = direction.Unit * speed
    end
end

-- Monitoramento de teclas para Fly
UserInputService.InputBegan:Connect(function(input, gameProcessed)
    if gameProcessed then return end
    if input.KeyCode == Enum.KeyCode.F then
        toggleFly()
    end
end)

RunService.Heartbeat:Connect(function()
    moveFly()
end)

-- Sistema de Teleporte Aleatório
local function teleportToRandomLocation()
    local locations = {
        Vector3.new(math.random(-100, 100), 10, math.random(-100, 100)), -- Castelo
        Vector3.new(math.random(-100, 100), 10, math.random(-100, 100)), -- Nikola Tesla Lab
        Vector3.new(math.random(-100, 100), 10, math.random(-100, 100)), -- Cidade Abandonada
        Vector3.new(math.random(-100, 100), 10, math.random(-100, 100))  -- Final
    }
    
    local selectedLocation = locations[math.random(1, #locations)]
    character:SetPrimaryPartCFrame(CFrame.new(selectedLocation))
end

-- Interface Gráfica para o Jogo
local screenGui = Instance.new("ScreenGui", player.PlayerGui)
screenGui.Name = "GameInterface"

-- Fundo de tela
local background = Instance.new("Frame", screenGui)
background.Size = UDim2.new(0, 300, 0, 500)
background.Position = UDim2.new(0.5, -150, 0.5, -250)
background.BackgroundColor3 = Color3.fromRGB(30, 30, 30)
background.BackgroundTransparency = 0.2
background.BorderSizePixel = 0
background.Visible = true

-- Título do painel
local titleLabel = Instance.new("TextLabel", background)
titleLabel.Text = "Menu de Jogo"
titleLabel.Size = UDim2.new(0, 300, 0, 50)
titleLabel.Position = UDim2.new(0, 0, 0, 0)
titleLabel.BackgroundTransparency = 1
titleLabel.TextColor3 = Color3.fromRGB(255, 255, 255)
titleLabel.TextScaled = true
titleLabel.Font = Enum.Font.GothamBold

-- Botão para teleportar
local teleportButton = Instance.new("TextButton", background)
teleportButton.Size = UDim2.new(0, 260, 0, 50)
teleportButton.Position = UDim2.new(0, 20, 0, 70)
teleportButton.Text = "Teleportar Aleatório"
teleportButton.TextColor3 = Color3.fromRGB(255, 255, 255)
teleportButton.BackgroundColor3 = Color3.fromRGB(0, 128, 255)
teleportButton.Font = Enum.Font.Gotham
teleportButton.TextSize = 20

teleportButton.MouseButton1Click:Connect(function()
    teleportToRandomLocation()
end)

-- Botão para ativar/desativar o voo
local flyButton = Instance.new("TextButton", background)
flyButton.Size = UDim2.new(0, 260, 0, 50)
flyButton.Position = UDim2.new(0, 20, 0, 140)
flyButton.Text = "Ativar/Desativar Voo"
flyButton.TextColor3 = Color3.fromRGB(255, 255, 255)
flyButton.BackgroundColor3 = Color3.fromRGB(0, 128, 255)
flyButton.Font = Enum.Font.Gotham
flyButton.TextSize = 20

flyButton.MouseButton1Click:Connect(function()
    toggleFly()
end)

-- Botão para minimizar/maximizar a interface
local toggleButton = Instance.new("TextButton", screenGui)
toggleButton.Size = UDim2.new(0, 50, 0, 50)
toggleButton.Position = UDim2.new(0, 10, 0, 10)
toggleButton.Text = "DR"
toggleButton.BackgroundColor3 = Color3.fromRGB(255, 0, 0)
toggleButton.Font = Enum.Font.GothamBold
toggleButton.TextColor3 = Color3.fromRGB(255, 255, 255)

local minimized = false
toggleButton.MouseButton1Click:Connect(function()
    if minimized then
        background.Visible = true
    else
        background.Visible = false
    end
    minimized = not minimized
end)

-- ESP de itens (Exemplo básico)
local function createESP(part)
    local esp = Instance.new("BillboardGui")
    esp.Adornee = part
    esp.Size = UDim2.new(0, 100, 0, 50)
    esp.StudsOffset = Vector3.new(0, 3, 0)
    esp.Parent = part

    local textLabel = Instance.new("TextLabel", esp)
    textLabel.Text = "Item!"
    textLabel.Size = UDim2.new(1, 0, 1, 0)
    textLabel.BackgroundTransparency = 1
    textLabel.TextColor3 = Color3.fromRGB(255, 255, 255)
end

-- Exemplo: Adicionando ESP a um item
for _, item in pairs(workspace:GetChildren()) do
    if item:IsA("Part") then
        createESP(item)
    end
end
